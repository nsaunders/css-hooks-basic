# prettier-ignore

name: publish

on:
  workflow_dispatch:

jobs:
  publish:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{github.ref}}
          fetch-depth: 0

      - uses: wagoid/commitlint-github-action@v5

      - uses: actions/setup-node@v4
        with:
          node-version: 20.5.0
          registry-url: 'https://registry.npmjs.org'

      - name: verify npm auth
        run: npm whoami
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - run: npm ci

      - run: npx prettier --check .

      - run: npm run lint

      - run: npm test

      - name: version bump
        id: root
        run:
          echo "version=$(npm version $(npx conventional-recommended-bump -p
          conventionalcommits) --preid=alpha --git-tag-version=false
          --tag-version-prefix='')" >> $GITHUB_OUTPUT

      - name: generate changelog
        run:
          npx conventional-changelog -p conventionalcommits -i CHANGELOG.md -s

      - name: commit version bump
        id: commit
        uses: EndBug/add-and-commit@v9
        with:
          author_name: GitHub Actions
          author_email: 41898282+github-actions[bot]@users.noreply.github.com
          message: "release: v${{steps.root.outputs.version}}"

      - name: tag version
        uses: actions/github-script@v3
        with:
          github-token: ${{github.token}}
          script: |
            await github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/v${{steps.root.outputs.version}}",
              sha: "${{steps.commit.outputs.commit_long_sha}}"
            })

      - name: fetch tag
        run: git fetch --tags

      - name: github release
        run: npx conventional-github-releaser -p conventionalcommits
        env:
          CONVENTIONAL_GITHUB_RELEASER_TOKEN: ${{secrets.GH_ACCESS_TOKEN}}

      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
